{"version":3,"sources":["assets/Vector.svg","assets/logo.svg","assets/landing-img.svg","assets/confetti.svg","assets/logo-round.svg","Datacontext.js","pages/landing.js","components/Success.js","pages/fillform.js","pages/recordlist.js","components/GoBackBtn.js","pages/recordDetail.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Context","createContext","ContextTeamPosition","ContextProvider","props","_React$useState","React","useState","_React$useState2","Object","slicedToArray","teams","setTeams","useEffect","fetch","then","res","json","data","react_default","a","createElement","Provider","value","children","landing","className","src","Logo","LandingImg","react_router_dom","to","Button","variant","Success","Confetti","alt","esm_Button","Fillform","_useForm","useForm","mode","defaultValues","criteriaMode","register","handleSubmit","watch","getValues","_useForm$formState","formState","errors","touchedFields","useContext","_useState","_useState2","positions","setPositions","_useState3","_useState4","filteredPositions","setFilteredPositions","_useState5","_useState6","activeTeamId","setActiveTeamId","_useState7","_useState8","page","setPage","_useState9","_useState10","setIsDisabled","_useState11","_useState12","setIsTeamEnabled","_useState13","_useState14","selectBorder","setselectBorder","_useState15","_useState16","selectBorderPosition","setselectBorderPosition","_useState17","_useState18","laptopborder","setlaptopborder","_useState19","_useState20","setlaptopbrand","_useState21","_useState22","allGood","setAllGood","_useState23","_useState24","errorBorder","setErrorBorder","_useState25","_useState26","laptopbrands","setLaptopbrands","_useState27","_useState28","cpus","setCpus","_useState29","_useState30","laptopimage","setlaptopimage","_useState31","_useState32","displayImg","setDisplayImage","watchData","navigate","useNavigate","formStepOne","useRef","formStepTwo","back","send","window","localStorage","setItem","filter","position","i","team_id","push","name","id","isInputEmpty","isError","keys","length","onSubmit","formData","FormData","form","token","append","surname","position_id","phone_number","email","laptop_name","laptop_brand_id","laptop_cpu","laptop_cpu_cores","laptop_cpu_threads","laptop_ram","laptop_hard_drive_type","body","method","onClick","current","classList","add","innerText","Arrow","Form","Fragment","ref","Group","controlId","Label","concat","firstname","Control","assign","type","placeholder","defaultValue","required","message","minLength","pattern","Text","Select","aria-label","onChange","e","target","map","team","key","ind","nativeEvent","selectedIndex","maxLength","style","height","backgroundColor","borderRadius","border","accept","files","reader","FileReader","onload","readyState","result","readAsDataURL","handleImage","laptopbrand","cpu","Check","label","console","log","checked","laptop_purchase_date","laptop_price","laptop_state","components_Success","currPage","LogoRounded","recordlist","setRecordList","Row","xs","md","record","Col","Card","Img","laptop","image","Body","Title","user","GoBackBtn","recordDetail","useLocation","pathname","split","laptopDetails","setlaptopDetails","setposition","teamsContext","myteam","myposition","components_GoBackBtn","t","brand_id","ram","hard_drive_type","cores","threads","state","price","purchase_date","App","Datacontext_ContextProvider","react_router","path","element","pages_landing","fillform","pages_recordlist","pages_recordDetail","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.f795fb41.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Vector.324bd5d5.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.bf266927.svg\";","module.exports = __webpack_public_path__ + \"static/media/landing-img.b9f0ed0b.svg\";","module.exports = __webpack_public_path__ + \"static/media/confetti.a32958e3.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-round.62fe69ae.svg\";","import React, { createContext } from 'react'\r\n\r\n\r\nexport const Context = createContext('');\r\nexport const ContextTeamPosition = createContext('');\r\n\r\n\r\nexport const ContextProvider =  (props) => {\r\n    const [teams, setTeams] = React.useState([])\r\n    // const [teamposition, setteamposition] = React.useState({\r\n    //   \"team\": \"team name\",\r\n    //   \"position\" : \"pos name\"\r\n    // })\r\n    // const [teamposition, setteamposition] = React.useState([\r\n    //   { team: \"foo\", position: \"positionn\"}\r\n    // ])\r\n\r\n\r\n\r\n\r\n\r\n    React.useEffect(()=> {\r\n       fetch('https://pcfy.redberryinternship.ge/api/teams')\r\n       .then(res => res.json())\r\n       .then(res => setTeams(res.data))\r\n    }, [])\r\n\r\n\r\n\r\n    //console.log(teamposition, \"from context\")\r\n \r\n\r\n\r\n    return (\r\n      <Context.Provider value={teams}>\r\n        {/* <ContextTeamPosition.Provider value={teampo}> */}\r\n            {props.children}\r\n        {/* </ContextTeamPosition.Provider> */}\r\n      </Context.Provider>\r\n    );\r\n  }","import React from 'react'\r\nimport Logo from '../assets/logo.svg'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\n\r\nimport Button from '@mui/material/Button';\r\n\r\n\r\nimport LandingImg from '../assets/landing-img.svg'\r\nfunction landing() {\r\n  return (\r\n    <div className=\"landing-page\">\r\n        <img src={Logo} className='logo'/>\r\n        <img src={LandingImg} className='landing-img'/>\r\n\r\n        <div className='btn-container'>\r\n            <Link to={\"fillform\"}> <Button variant=\"contained\">ჩანაწერის დამატება</Button> </Link>\r\n            <Link to={\"recordlist\"}> <Button variant=\"contained\">ჩანაწერების სია</Button> </Link>\r\n        </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default landing","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport Button from 'react-bootstrap/Button';\r\nimport Confetti from '../assets/confetti.svg'\r\n\r\nfunction Success() {\r\n  return (\r\n    <div className='success'>\r\n      <div className='success-modal'>\r\n          <img src={Confetti} alt=\"confetti \"/>\r\n\r\n          <h1>ჩანაწერი დამატებულია!</h1>\r\n          <Link to={\"/PCfy/recordlist\"}>\r\n          <Button variant=\"primary\" className={\"d-block  me-auto d-flex btnreverse\"}> \r\n              სიაში გადაყვანა\r\n          </Button>\r\n          </Link>\r\n\r\n          <Link to={\"/PCfy\"}>\r\n             <Button variant=\"primary\" className={\"d-block btnnext me-auto d-flex\"}> \r\n              მთავარი\r\n          </Button>\r\n          </Link>\r\n         \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Success","import React , {useContext, useEffect, useState, useRef} from 'react';\r\nimport {Context} from '../Datacontext'\r\nimport {ContextTeamPosition} from '../Datacontext'\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport Success from '../components/Success'\r\nimport Arrow from '../assets/Vector.svg'\r\nimport LogoRounded from '../assets/logo-round.svg'\r\n\r\n\r\n\r\n\r\n\r\nfunction Fillform() {\r\n  const { register, handleSubmit,  watch, getValues,formState: { errors, touchedFields } } = useForm({\r\n    mode: 'onChange',\r\n    defaultValues: {\r\n    },\r\n    criteriaMode: \"all\"\r\n  });\r\n\r\n\r\n  \r\n  const teams = useContext(Context);\r\n  // const tp = useContext(ContextTeamPosition);\r\n  const [positions, setPositions] = useState([])\r\n  const [filteredPositions, setFilteredPositions] = useState([])\r\n  const [activeTeamId, setActiveTeamId] = useState([])\r\n  const [page, setPage] = useState(1)\r\n  const [isDisabled, setIsDisabled] = useState(false)\r\n  const [isTeamEnabled, setIsTeamEnabled] = useState(false)\r\n  const [selectBorder, setselectBorder] = useState('')\r\n  const [selectBorderPosition, setselectBorderPosition] = useState('')\r\n  const [laptopborder, setlaptopborder] = useState('')\r\n  const [laptopbrand, setlaptopbrand] = useState('')\r\n \r\n  const [allGood, setAllGood] = useState(false)\r\n\r\n  const [errorBorder, setErrorBorder] = useState('')\r\n  const [laptopbrands, setLaptopbrands] = useState([])\r\n  const [cpus, setCpus] = useState([])\r\n  const [laptopimage, setlaptopimage] = useState()\r\n\r\n\r\n  const [displayImg, setDisplayImage] = useState(\"\")\r\n\r\n  \r\nlet watchData = watch()\r\n\r\nlet navigate = useNavigate()\r\nlet formStepOne = useRef()\r\nlet formStepTwo=useRef()\r\nlet back = useRef()\r\nlet send = useRef()\r\n\r\n  const goBack = () => {\r\n   \r\n   if( page === 1) {\r\n     navigate(-1)\r\n   } \r\n    if(page === 2) {\r\n      formStepTwo.current.classList.add(\"d-none\")\r\n      formStepOne.current.classList.add(\"d-grid\")\r\n      back.current.classList.add(\"d-none\")\r\n      send.current.innerText = \"შემდეგი\"\r\n      setPage(1)\r\n    }\r\n\r\n  }\r\n\r\n  const navigateToEmployeeInfo = () => {\r\n    if(allGood && page === 2) {\r\n      formStepTwo.current.classList.add(\"d-none\")\r\n      formStepOne.current.classList.add(\"d-grid\")\r\n      back.current.classList.add(\"d-none\")\r\n      send.current.innerText = \"შემდეგი\"\r\n      setPage(1)\r\n    }\r\n  }\r\n  const navigateToLaptopInfo = () => {\r\n    if(allGood && page === 1) {\r\n      formStepOne.current.classList.add(\"d-none\")\r\n      formStepTwo.current.classList.add(\"d-grid\")\r\n      //back.current.classList.add(\"d-none\")\r\n      send.current.innerText = \"შემდეგი\"\r\n      setPage(2)\r\n    }\r\n    //=====es droebit\r\n    // formStepOne.current.classList.add(\"d-none\")\r\n    //   formStepTwo.current.classList.add(\"d-grid\")\r\n    //   send.current.innerText = \"შემდეგი\"\r\n    //   setPage(2)\r\n  }\r\n\r\n  useEffect(() => {\r\n      fetch('https://pcfy.redberryinternship.ge/api/positions')\r\n      .then(res => res.json())\r\n      .then(res => setPositions(res.data))\r\n\r\n      \r\n      fetch('https://pcfy.redberryinternship.ge/api/brands')\r\n      .then(res => res.json())\r\n      .then(res => setLaptopbrands(res.data))\r\n\r\n      fetch('https://pcfy.redberryinternship.ge/api/cpus')\r\n      .then(res => res.json())\r\n      .then(res => setCpus(res.data))\r\n  \r\n  }, [])\r\n\r\n  useEffect(() => {\r\n      window.localStorage.setItem(\"id\", activeTeamId)\r\n      let filteredPositions = []\r\n    \r\n      positions.filter((position, i) =>{ \r\n   \r\n        return position.team_id == activeTeamId && filteredPositions.push([position.name, position.id])\r\n      })\r\n\r\n      setFilteredPositions(filteredPositions)\r\n\r\n  }, [activeTeamId])\r\n  \r\n  useEffect(() => {\r\n    let isInputEmpty = true\r\n    let isError =  Object.keys(errors).length !== 0\r\n\r\n    Object.keys(touchedFields).length < 6 \r\n    ? isInputEmpty = true : isInputEmpty = false\r\n\r\n\r\n   isInputEmpty || isError ? setIsDisabled(true) : setIsDisabled(false)\r\n\r\n   \r\n    if (isInputEmpty || isError)  {\r\n      setAllGood(false)\r\n      setErrorBorder('inputError')\r\n    } else {\r\n      setAllGood(true)\r\n      setErrorBorder('border-ok')\r\n    }\r\n\r\n  }, [watchData])\r\n  \r\n\r\n\r\n\r\n\r\n    \r\n  \r\n   const handleImage = (e) => {\r\n    let reader = new FileReader()\r\n    reader.onload = () => {\r\n        if(reader.readyState === 2) {\r\n          setDisplayImage(reader.result)\r\n        }\r\n    }\r\n    reader.readAsDataURL(e.target.files[0])\r\n\r\n   }\r\n\r\n  const onSubmit = () => {\r\n    let formData = new FormData();\r\n    let form = getValues()\r\n    form.token = \"3ebff5ab018b0675ff671820082b2cb7\"\r\n\r\n    //let file = e.target.files[0]\r\n    // ასე loop-ით არ ქნა, რავიცი\r\n    // for (const [key, value] of Object.entries(form)) {\r\n    //       formData.append(key, value)             \r\n    // }\r\n   \r\n \r\n   \r\n  formData.append(\"name\", form.name);\r\n  formData.append(\"surname\" , form.surname);\r\n  formData.append(\"team_id\" , form.team_id)\r\n  formData.append(\"position_id\" , form.position_id);\r\n  formData.append(\"phone_number\" , form.phone_number);\r\n  formData.append(\"email\" , form.email);\r\n  formData.append(\"token\" , form.token);\r\n\r\n  formData.append(\"laptop_name\" , form.laptop_name);\r\n  formData.append(\"laptop_brand_id\" , form.laptop_brand_id);\r\n  formData.append(\"laptop_cpu\" , form.laptop_cpu);\r\n  formData.append(\"laptop_cpu_cores\" , form.laptop_cpu_cores);\r\n  formData.append(\"laptop_cpu_threads\" , form.laptop_cpu_threads);\r\n  formData.append(\"laptop_ram\" , form.laptop_ram);\r\n  formData.append(\"laptop_hard_drive_type\" , form.laptop_hard_drive_type);\r\n  formData.append(\"laptop_state\" , \"new\");\r\n  formData.append(\"laptop_price\" , \"2550\");\r\n  formData.append(\"laptop_purchase_date\" , \"9/4/2022\");\r\n  formData.append('laptop_image', laptopimage);\r\n\r\n\r\n\r\n\r\n  fetch(\"https://pcfy.redberryinternship.ge/api/laptop/create\",\r\n      {\r\n          body: formData,\r\n          method: \"post\"\r\n  });\r\n  \r\n  }\r\n   \r\n\r\n \r\n  \r\n\r\n  return (\r\n\r\n    // page === 1 || page === 2 ?\r\n     <div className='fill-form-container'>\r\n      \r\n        <button className='goback position-relative' onClick={goBack}> \r\n          <img src={Arrow} alt=\"arrow\" /> \r\n        </button>\r\n\r\n        <div className='d-flex menu'>          \r\n          <h6 className={page === 1  ? \"activelink\" : \"\"} onClick={navigateToEmployeeInfo}>თანამშრომლის ინფო </h6>\r\n          <h6 className={page === 2  ? \"activelink\" : \"\"} onClick={ navigateToLaptopInfo}>ლეპტოპის მახასიათებლები</h6> \r\n        </div>\r\n  \r\n        <div className='fill-form'>\r\n          <Form  className='employee-form' onSubmit={handleSubmit(onSubmit)} name=\"form\">\r\n            {\r\n              <>\r\n                <fieldset className={page === 1 ? 'employee-form w-100 d-grid' : \"employee-form w-100 ifdisplay\"}\r\n                 ref={formStepOne} >\r\n                <div className='d-flex justify-content-between name-container'>\r\n                  <Form.Group  controlId=\"formBasicPassword\"   >\r\n                      <Form.Label \r\n                        name=\"firstname\"\r\n                        className={`firstname noborder ${errors.firstname && errorBorder}`} >\r\n                          სახელი\r\n                      </Form.Label>\r\n\r\n                      <Form.Control \r\n                        type=\"text\" \r\n                        name=\"name\" \r\n                        className={`name noerrtext ${errors.name && errorBorder}`}\r\n                        placeholder=\"გრიშა\" \r\n                        defaultValue=''\r\n                        // autoComplete=\"off\"\r\n                        {...register(\"name\", \r\n                        { required: {value: true, message:\"შეავსე ველი\"}, \r\n                          minLength: {value:2, message:\"გამოიყენე მინიმუმ 2 სიმბოლო\"}, \r\n                          pattern:{value: /^[ა-ჰ]+$/g, message:\"გამოიყენე ქართული ასოები\" }\r\n                        },\r\n                        )}\r\n                      />\r\n                              \r\n                      <Form.Text \r\n                       className=\"text-muted\" >\r\n                         <span \r\n                           name=\"name\" \r\n                           className={`name noborder ${errors.name && errorBorder}`}>\r\n                            {errors.name ? errors.name.message : \"მინიმუმ 2 სიმბოლო, ქართული ასოები\"}\r\n                          </span>\r\n                      </Form.Text>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group  controlId=\"formBasicText\" >\r\n                      <Form.Label \r\n                      name=\"surname\"\r\n                      className={`surname noborder ${errors.surname && errorBorder}`}>\r\n                        გვარი\r\n                      </Form.Label>\r\n\r\n                      <Form.Control \r\n                      type=\"text\" \r\n                      name=\"surname\" \r\n                      className={`surname noerrtext ${errors.surname && errorBorder}`}\r\n                      placeholder=\"ონიანი\" \r\n                      defaultValue=''\r\n                      // autoComplete=\"off\"   \r\n                      {...register(\"surname\", \r\n                      { required: {value: true, message:\"შეავსე ველი\"}, \r\n                        minLength: {value:2, message:\"გამოიყენე მინიმუმ 2 სიმბოლო\"}, \r\n                        pattern:{value: /^[ა-ჰ]+$/g, message:\"გამოიყენე ქართული ასოები\" }\r\n                      },\r\n                    )}\r\n                      />\r\n                      <Form.Text className=\"text-muted\">\r\n                          <span \r\n                           name=\"surname\" \r\n                           className={`surname noborder ${errors.surname && errorBorder}`}>\r\n                            {errors.surname ? errors.surname.message : \"მინიმუმ 2 სიმბოლო, ქართული ასოები\"}\r\n                          </span>\r\n                     \r\n                      </Form.Text>\r\n                  </Form.Group>\r\n                </div>\r\n                \r\n                <Form.Group  controlId=\"formBasicPassword\">\r\n                    <Form.Select aria-label=\"Default select example\"\r\n                    name=\"team_id\" \r\n                    className={`team_id noerrtext ${errors.team_id && errorBorder} ${selectBorder}`}\r\n                    defaultValue=\"\"\r\n                        {...register(\"team_id\", {\r\n                          required: \"აირჩიეთ გუნდი\",\r\n                        })}\r\n                    onChange={(e) => {\r\n                      setActiveTeamId(e.target.value)\r\n                      setIsTeamEnabled(true)\r\n                      setselectBorder('border-ok')\r\n                      // let ind = e.nativeEvent.target.selectedIndex\r\n                      // tp({...tp, team: e.nativeEvent.target[ind].innerText})\r\n                    \r\n                    }}\r\n                    >\r\n                      \r\n                        <option className='d-none' value=\"\">თიმი</option>\r\n                        {\r\n                            teams.length !== 0 ?\r\n                                teams.map((team,i) => {\r\n                                    return <option value={team.id} key={i}  className={`team_id  ${errors.team && errorBorder}`}>{team.name}</option>\r\n                                    \r\n                                }) :\r\n                                <option>იტვირთება ...</option>\r\n                        }\r\n                    </Form.Select>\r\n                   \r\n                    \r\n                </Form.Group>\r\n\r\n                <Form.Group  controlId=\"formBasicPassword\">\r\n                    <Form.Select aria-label=\"Default select example\"\r\n                        // disabled={isTeamEnabled ? false : true}\r\n                        name=\"position_id\"\r\n                        className={`position_id noerrtext ${errors.position_id && errorBorder}  ${selectBorderPosition}`}\r\n                        defaultValue=\"\"\r\n                        {...register(\"position_id\", {\r\n                          required: \"აირჩიეთ პოზიცია\",\r\n                        })}\r\n                \r\n                        onChange={(e) => {\r\n                          let ind = e.nativeEvent.target.selectedIndex\r\n                          let res = e.nativeEvent.target[ind].innerText\r\n                          // tp({...tp, team: e.nativeEvent.target[ind].innerText})\r\n                         \r\n                          setselectBorderPosition('border-ok')\r\n                          \r\n                        }}\r\n                        \r\n                    >\r\n                        <option className='d-none' value=\"\">პოზიცია</option>\r\n                        {\r\n                          filteredPositions.map((position,i) => {\r\n                            return <option value={position[1]} key={i}>{position}</option>\r\n                          })\r\n                        }\r\n                    </Form.Select>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                    <Form.Label\r\n                     name=\"email\"\r\n                     className={`email noborder ${errors.email && errorBorder}`}\r\n                    >\r\n                      მეილი\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                    type=\"email\" \r\n                    name=\"email\"\r\n                    className={`email noerrtext ${errors.email && errorBorder}`}\r\n                    placeholder=\"მეილი\" \r\n                    defaultValue=''\r\n                    // autoComplete=\"off\"\r\n                    {...register(\"email\", \r\n                    { required: {value: true, message:\"შეავსე ველი\"}, \r\n                    // /[A-Za-z0-9._%+-]+@redberry\\.ge$/g\r\n                      pattern:{value: /^[A-Za-z0-9._%+-]+@redberry\\.ge$/g, message:\"უნდა მთავრდებოდეს @redberry.ge-თი\" }\r\n                    },\r\n                    )}\r\n                    />\r\n        \r\n                    <Form.Text \r\n                       className=\"text-muted\" >\r\n                         <span \r\n                           name=\"email\" \r\n                           className={`email noborder ${errors.email && errorBorder}`}>\r\n                            {errors.email ? errors.email.message : \" უნდა მთავრდებოდეს @redberry.ge-ით\"}\r\n                          </span>\r\n                      </Form.Text>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                    <Form.Label\r\n                    name=\"phone_number\"\r\n                    className={`phone_number noborder ${errors.phone_number && errorBorder}`}\r\n                    >\r\n                      ტელეფონის ნომერი\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                    type=\"text\" \r\n                    name=\"phone_number\" \r\n                    className={`phone_number noerrtext ${errors.phone_number && errorBorder}`}\r\n                    placeholder=\"+995 598 00 07 01\" \r\n                    defaultValue=''\r\n                    // autoComplete=\"off\"\r\n                    {...register(\"phone_number\", \r\n                    { required: {value: true, message:\"შეავსე ველი\"}, \r\n                      minLength: {value:13}, \r\n                      maxLength: {value:13}, \r\n                      pattern:{value: /[+0-9]/g}\r\n                    },\r\n                    )}\r\n                    />\r\n                    <Form.Text className={`text-muted noborder ${errors.phone_number && errorBorder}`}>\r\n                    უნდა აკმაყოფილებდეს ქართული მობ-ნომრის ფორმატს\r\n                        \r\n                    </Form.Text>\r\n                </Form.Group>\r\n                </fieldset>\r\n\r\n\r\n\r\n                <fieldset  ref={formStepTwo} className={page === 2 ? 'employee-form w-100 d-grid' :\"employee-form w-100 ifdisplay\" }>\r\n                    <div className='d-flex position-relative justify-content-between name-container uploadImageContainer' \r\n                    style={{height: '423px', backgroundColor: '#f6f6f6', borderRadius: '18px', border: '2px dashed #4386a9'}}\r\n                    >\r\n\r\n                      <img src={displayImg} alt=\"uploaded_img\" />\r\n                      {/* !!! */}\r\n                      <input type=\"file\" id=\"input\" className='input-upload'\r\n                      accept='image/*'\r\n                         {...register(\"laptop_image\", \r\n                         { required: {value: true, message:\"შეავსე ველი\"},\r\n                         onChange: (e) => {\r\n                          setlaptopimage(e.target.files[0])\r\n                          handleImage(e)\r\n                         }\r\n                         },\r\n                         )}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className='d-flex justify-content-between align-items-center name-container'>\r\n                       \r\n\r\n\r\n                        <Form.Group  controlId=\"formBasicPassword\"   >\r\n                            <Form.Label \r\n                              name=\"laptop_name\"\r\n                              className={`laptop_name noborder ${errors.laptop_name && errorBorder}`} >\r\n                                ლეპტოპის სახელი\r\n                            </Form.Label>\r\n\r\n                            <Form.Control \r\n                              type=\"text\" \r\n                              name=\"laptop_name\" \r\n                              className={`laptop_name noerrtext ${errors.laptop_name && errorBorder}`}\r\n                              placeholder=\"HP\" \r\n                              defaultValue=''\r\n                              // autoComplete=\"off\"\r\n                              {...register(\"laptop_name\", \r\n                              { required: {value: true, message:\"შეავსე ველი\"}, \r\n                                pattern:{value: /^[a-zA-Z0-9!@#$%^&*()_+=]*$/g, message:\"ლათინური ასოები, ციფრები, !@#$%^&*()_+= \" }\r\n                              },\r\n                              )}\r\n                            />\r\n                                    \r\n                            <Form.Text className=\"text-muted\" >\r\n                              <span \r\n                                name=\"laptop_name\" \r\n                                className={`laptop_name noborder ${errors.laptop_name && errorBorder}`}>\r\n                                  {errors.laptop_name ? errors.laptop_name.message : \"ლათინური ასოები, ციფრები, !@#$%^&*()_+= \"}\r\n                              </span>\r\n                            </Form.Text>\r\n                        </Form.Group>\r\n\r\n\r\n                        <Form.Group  controlId=\"formBasicPassword\">\r\n                            <Form.Select aria-label=\"Default select example\"\r\n                              name=\"laptop_brand_id\" \r\n                              className={`laptop_brand_id noerrtext ${errors.laptop_brand_id && errorBorder} `}\r\n                              //${laptop_brand_id} zemot klasshi qonda\r\n                              defaultValue=\"\"\r\n                                  {...register(\"laptop_brand_id\", {\r\n                                    required: \"აირჩიეთ ბრენდი\",\r\n                                  }\r\n                                )}\r\n\r\n                                  \r\n                              onChange={(e) => {\r\n                                setlaptopbrand('border-ok')\r\n                            }}>\r\n                          \r\n                            <option className='d-none' value=\"\">ლეპტოპის ბრენდი</option>\r\n                            {\r\n                                laptopbrands.length !== 0 ?\r\n                                laptopbrands.map((laptopbrand,i) => {\r\n                                        return <option  key={i}  className={`laptop_brand_id  ${errors.laptopbrand && errorBorder}`} value={laptopbrand.id}>{laptopbrand.name}</option>\r\n                                        \r\n                                    }) :\r\n                                    <option>იტვირთება ...</option>\r\n                            }\r\n                        </Form.Select>\r\n                        </Form.Group>\r\n                      \r\n                    </div>\r\n                  \r\n\r\n                  <div className='container-middle-form'>\r\n                  <div className='d-flex justify-content-between align-items-center name-container '>\r\n                        <Form.Group  controlId=\"formBasicPassword\">\r\n                            <Form.Select aria-label=\"Default select example\"\r\n                              name=\"laptop_cpu\" \r\n                              className={`laptop_cpu noerrtext ${errors.laptop_cpu && errorBorder} ${laptopborder}`}\r\n                              defaultValue=\"\"\r\n                                  {...register(\"laptop_cpu\", {\r\n                                    required: \"აირჩიეთ laptop_cpu\",\r\n                                  })}\r\n                              onChange={() => {setlaptopborder('border-ok')}}>\r\n                          \r\n                            <option className='d-none' value=\"\">CPU</option>\r\n                            {\r\n                                cpus.length !== 0 ?\r\n                                cpus.map((cpu,i) => {\r\n                                        return <option  key={i}  className={`laptop_cpu  ${errors.cpu && errorBorder}`}>{cpu.name}</option>\r\n                                    }) :\r\n                                    <option>იტვირთება ...</option>\r\n                            }\r\n                            </Form.Select>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group  controlId=\"formBasicPassword\"   >\r\n                          <Form.Label \r\n                            name=\"laptop_cpu_cores\"\r\n                            className={`laptop_cpu_cores noborder ${errors.laptop_cpu_cores && errorBorder}`} >\r\n                              CPU-ს ბირთვი\r\n                          </Form.Label>\r\n\r\n                          <Form.Control \r\n                            type=\"text\" \r\n                            name=\"laptop_cpu_cores\" \r\n                            className={`laptop_cpu_cores noerrtext ${errors.laptop_cpu_cores && errorBorder}`}\r\n                            placeholder=\"14\" \r\n                            defaultValue=''\r\n                            // autoComplete=\"off\"\r\n                            {...register(\"laptop_cpu_cores\", \r\n                            { required: {value: true, message:\"შეავსე ველი\"}, \r\n                              pattern:{value: /^[0-9]*$/g, message:\"მხოლოდ ციფრები\" }\r\n                            },\r\n                            )}\r\n                          />\r\n                                  \r\n                          <Form.Text \r\n                          className=\"text-muted\" >\r\n                            <span \r\n                              name=\"laptop_cpu_cores\" \r\n                              className={`laptop_cpu_cores noborder ${errors.laptop_cpu_cores && errorBorder}`}>\r\n                                {errors.laptop_cpu_cores ? errors.laptop_cpu_cores.message : \"მხოლოდ ციფრები\"}\r\n                              </span>\r\n                          </Form.Text>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group  controlId=\"formBasicPassword\"   >\r\n                          <Form.Label \r\n                            name=\"laptop_cpu_threads\"\r\n                            className={`laptop_cpu_threads noborder ${errors.laptop_cpu_threads && errorBorder}`} >\r\n                              CPU-ს ნაკადი\r\n                          </Form.Label>\r\n\r\n                          <Form.Control \r\n                            type=\"text\" \r\n                            name=\"laptop_cpu_threads\" \r\n                            className={`laptop_cpu_threads noerrtext ${errors.laptop_cpu_threads && errorBorder}`}\r\n                            placeholder=\"365\" \r\n                            defaultValue=''\r\n                            // autoComplete=\"off\"\r\n                            {...register(\"laptop_cpu_threads\", \r\n                            { required: {value: true, message:\"შეავსე ველი\"}, \r\n                              pattern:{value: /^[0-9]*$/g, message:\"მხოლოდ ციფრები\" }\r\n                            },\r\n                            )}\r\n                          />\r\n                                  \r\n                          <Form.Text \r\n                          className=\"text-muted\" >\r\n                            <span \r\n                              name=\"laptop_cpu_threads\" \r\n                              className={`laptop_cpu_threads noborder ${errors.laptop_cpu_threads && errorBorder}`}>\r\n                                {errors.laptop_cpu_threads ? errors.laptop_cpu_threads.message : \"მხოლოდ ციფრები\"}\r\n                              </span>\r\n                          </Form.Text>\r\n                        </Form.Group>\r\n                    </div>\r\n\r\n\r\n                    <div className='d-flex justify-content-between align-items-center name-container'>\r\n                        <Form.Group>\r\n                              <Form.Label \r\n                                name=\"laptop_ram\"\r\n                                className={`laptop_ram noborder ${errors.laptop_ram && errorBorder}`} >\r\n                                  ლეპტოპის RAM (GB)\r\n                              </Form.Label>\r\n\r\n                              <Form.Control \r\n                                type=\"text\" \r\n                                name=\"laptop_ram\" \r\n                                className={`laptop_ram noerrtext ${errors.laptop_ram && errorBorder}`}\r\n                                placeholder=\"16\" \r\n                                defaultValue=''\r\n                                // autoComplete=\"off\"\r\n                                {...register(\"laptop_ram\", \r\n                                { required: {value: true, message:\"შეავსე ველი\"}, \r\n                                  pattern:{value: /^[0-9]*$/g, message:\"მხოლოდ ციფრები\" }\r\n                                },\r\n                                )}\r\n                              />\r\n                                      \r\n                              <Form.Text \r\n                              className=\"text-muted\" >\r\n                                <span \r\n                                  name=\"laptop_ram\" \r\n                                  className={`laptop_ram noborder ${errors.laptop_ram && errorBorder}`}>\r\n                                    {errors.laptop_ram ? errors.laptop_ram.message : \"მხოლოდ ციფრები\"}\r\n                                  </span>\r\n                              </Form.Text>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                          <Form.Label \r\n                            name=\"laptop_hard_drive_type\"\r\n                            className={`laptop_hard_drive_type noborder choose-div-label ${errors.laptop_hard_drive_type && errorBorder}`} >\r\n                              მეხსიერების ტიპი\r\n                          </Form.Label>\r\n\r\n                          <Form.Check\r\n                          className='form-check form-check-space' \r\n                            type={\"radio\"}\r\n                            id={`default`}\r\n                            label={`SSD`}\r\n                            value={\"SSD\"}\r\n                            onClick={(e) => {\r\n                              console.log(e.target.checked)\r\n                            }}\r\n                            {...register(\"laptop_hard_drive_type\")}\r\n                          />\r\n                          <Form.Check\r\n                          className='form-check' \r\n                             type={\"radio\"}\r\n                             id={`default`}\r\n                             label={`HDD`}\r\n                             value={\"HDD\"}\r\n                             onClick={(e) => {\r\n                               console.log(e.target.checked)\r\n                             }}\r\n                             {...register(\"laptop_hard_drive_type\")}\r\n                          />\r\n\r\n                        </Form.Group>\r\n                    </div>\r\n                  </div>\r\n               \r\n                  \r\n\r\n\r\n\r\n                    <div className='d-flex justify-content-between  name-container choose'>\r\n                        <Form.Group>\r\n                              <Form.Label \r\n                                name=\"laptop_purchase_date\"\r\n                                className={`laptop_purchase_date noborder ${errors.laptop_purchase_date && errorBorder}`} >\r\n                                  შეძენის რიცხვი (არჩევითი)\r\n                              </Form.Label>\r\n\r\n                              <Form.Control \r\n                                type=\"text\" \r\n                                name=\"laptop_purchase_date\" \r\n                                className={`laptop_purchase_date noerrtext ${errors.laptop_purchase_date && errorBorder}`}\r\n                                placeholder=\"დდ / თთ / წწწწ\" \r\n                                defaultValue=''\r\n                                // autoComplete=\"off\"\r\n                                {...register(\"laptop_purchase_date\", \r\n                                { required: {value: false, message:\"შეავსე ველი\"}, \r\n                                  pattern:{value: /^[0-9]/g, message:\"მხოლოდ ციფრები\" }\r\n                                },\r\n                                )}\r\n                              />\r\n                        </Form.Group>\r\n\r\n\r\n                        <Form.Group>\r\n                              <Form.Label \r\n                                name=\"laptop_price\"\r\n                                className={`laptop_price noborder ${errors.laptop_price && errorBorder}`} >\r\n                                  ლეპტოპის ფასი\r\n                              </Form.Label>\r\n\r\n                              <Form.Control \r\n                                type=\"text\" \r\n                                name=\"laptop_price\" \r\n                                className={`laptop_price noerrtext ${errors.laptop_price && errorBorder}`}\r\n                                placeholder=\"0000\" \r\n                                defaultValue=''\r\n                                // autoComplete=\"off\"\r\n                                {...register(\"laptop_price\", \r\n                                { required: {value: true, message:\"შეავსე ველი\"}, \r\n                                  pattern:{value: /^[0-9]/g, message:\"მხოლოდ ციფრები\" }\r\n                                },\r\n                                )}\r\n                              />\r\n                                      \r\n                              <Form.Text \r\n                              className=\"text-muted\" >\r\n                                <span \r\n                                  name=\"laptop_price\" \r\n                                  className={`laptop_price noborder ${errors.laptop_price && errorBorder}`}>\r\n                                    {errors.laptop_price ? errors.laptop_price.message : \"მხოლოდ ციფრები\"}\r\n                                  </span>\r\n                              </Form.Text>\r\n                        </Form.Group>\r\n                    </div>\r\n\r\n\r\n                    <div className='d-block justify-content-between align-items-center name-container'>\r\n                        \r\n                        <Form.Group>\r\n                          <Form.Label \r\n                            name=\"laptop_state\"\r\n                            className={`laptop_state noborder choose-div-label  ${errors.laptop_state && errorBorder}`} >\r\n                              ლეპტოპის მდგომარეობა\r\n                          </Form.Label>\r\n                          \r\n\r\n                          <div className='d-flex'>\r\n                            <Form.Check\r\n                            className='form-check form-check-space' \r\n                              type={\"radio\"}\r\n                              id={`default`}\r\n                              label={`ახალი`}\r\n                              value={\"ახალი\"}\r\n                              {...register(\"laptop_state\", \r\n                              // { required: {value: true, message:\"შეავსე ველი\"}\r\n                              // },\r\n                              )}\r\n                            />\r\n                            <Form.Check\r\n                            className='form-check' \r\n                              type={\"radio\"}\r\n                              id={`default`}\r\n                              label={`მეორადი`}\r\n                              value={\"მეორადი\"}\r\n                              {...register(\"laptop_state\", \r\n                              // { required: {value: true, message:\"შეავსე ველი\"}\r\n                              // },\r\n                              )}\r\n                            />\r\n                          </div>\r\n                         \r\n                        </Form.Group>\r\n                    </div>\r\n                  \r\n                   \r\n\r\n                </fieldset>\r\n\r\n                {\r\n                  page === 3 && <Success />\r\n                }\r\n                <div className='d-flex'>\r\n                  <Button \r\n                    variant=\"primary\" \r\n                    // type=\"submit\"   \r\n                    className={page === 1 ? \"d-none\" : \"d-block btnreverse me-auto d-flex\"}\r\n                    ref={back}\r\n                    onClick={() => setPage((currPage) => currPage - 1)}> \r\n                      უკან \r\n                  </Button>\r\n\r\n                  <Button \r\n                    // disabled={isDisabled}\r\n                    variant=\"primary\" \r\n                    type={page === 3 ? \"submit\" : \"button\"} \r\n                    className=\" btnnext ms-auto d-flex\"\r\n                    ref={send}\r\n                    onClick={() => {\r\n                      handleSubmit(onSubmit)\r\n                      allGood === true ?  setPage((currPage) => currPage + 1)\r\n                      : setPage((currPage) => currPage)\r\n\r\n                      if(allGood && page === 2) {\r\n                        console.log(\"gaigzavna\")\r\n                      }\r\n\r\n                \r\n                      \r\n                      // for (const [key, value] of Object.entries(watchData)) {\r\n                        \r\n                      //   let inputs = document.getElementsByName(key)\r\n                                            \r\n                      //   if(value.length === 0 ) {\r\n                      //     // for (const input of inputs) {\r\n                      //     //   input.classList.add(\"inputError\")\r\n                      //     // }\r\n                      //     console.log(value)\r\n                     \r\n                      //   }\r\n                      //  }\r\n                      }}\r\n                      > \r\n                        { page === 2 ? \" დამახსოვრება \" : \" შემდეგი\"}\r\n                    </Button>\r\n                </div>\r\n              </>\r\n            }\r\n\r\n           \r\n          </Form>\r\n\r\n         \r\n\r\n         \r\n        </div>\r\n\r\n        <img src={LogoRounded} alt=\"redberry-logo\" className='logo-rounded '/>\r\n     </div> \r\n    //  : \r\n    //  <Success />\r\n  );\r\n}\r\n\r\nexport default Fillform;","import React, {useEffect, useState} from 'react'\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\nimport Arrow from '../assets/Vector.svg'\r\n\r\n\r\nfunction recordlist() {\r\n  let navigate = useNavigate()\r\n  const [recordlist, setRecordList] = useState([])\r\n  let token = \"3ebff5ab018b0675ff671820082b2cb7\"\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    fetch(`https://pcfy.redberryinternship.ge/api/laptops?token=${token}`)\r\n    .then(res => res.json())\r\n    .then(res => setRecordList(res.data))\r\n\r\n  }, [])\r\n  \r\n\r\n  \r\n  const goBack = () => {navigate(-1)}\r\n  return (\r\n    <div>\r\n        <button className='goback position-relative gobacklist' onClick={goBack}> \r\n          <img src={Arrow} alt=\"arrow\" /> \r\n        </button>\r\n\r\n        <h1 className='recordlist-title'>ჩანაწერების სია</h1>\r\n      {\r\n        recordlist.length !== 0 ?\r\n        <Row xs={1} md={2} className=\"g-4 card-row\">\r\n          {recordlist.map((record,i) => {\r\n            return  <Col key={i} className=\"p-0\" >\r\n                      <Card className=\"recordlist_card flex-row align-items-center\">\r\n                        <Card.Img variant=\"top\" className=\"record-img\" src={\"https://pcfy.redberryinternship.ge/\" + record.laptop.image} />\r\n                        <Card.Body>\r\n                          <Card.Title>\r\n                            {record.user.name} { record.user.surname}\r\n                          </Card.Title>\r\n                          <Card.Text>\r\n                            hi\r\n                          </Card.Text>\r\n                          <Link to={`id=${record.laptop.id}`}>\r\n                            <button className='seemore'>\r\n                                მეტის ნახვა\r\n                            </button>\r\n                          </Link>\r\n                        </Card.Body>\r\n                      </Card>\r\n                    </Col>\r\n        })}\r\n        </Row>\r\n         :\r\n        <h1>ჩანაწერების სია ცარიელია </h1>\r\n      }\r\n\r\n\r\n\r\n{/* testt */}\r\n{/* <Row xs={1} md={2} lg={2} className=\"g-4 card-row\">\r\n   <Col  className=\"p-0\">\r\n          <Card className=\"recordlist_card flex-row align-items-center\">\r\n            <Card.Img variant=\"top\" className=\"record-img\" src={Arrow} />\r\n            <Card.Body>\r\n              <Card.Title>\r\n                ანა შარვაძე\r\n              </Card.Title>\r\n              <Card.Text>\r\n                hi\r\n              </Card.Text>\r\n              <Link to={`id=2514}`}>\r\n                <button className='seemore'>\r\n                    მეტის ნახვა\r\n                </button>\r\n              </Link>\r\n            </Card.Body>\r\n          </Card>\r\n    </Col>\r\n    <Col  className=\"p-0\" >\r\n      <Card className=\"recordlist_card flex-row align-items-center\">\r\n        <Card.Img variant=\"top\" className=\"record-img\" src={Arrow} />\r\n        <Card.Body>\r\n          <Card.Title>\r\n            ანა შარვაძე\r\n          </Card.Title>\r\n          <Card.Text>\r\n            hi\r\n          </Card.Text>\r\n          <Link to={`id=2514}`}>\r\n            <button className='seemore'>\r\n                მეტის ნახვა\r\n            </button>\r\n          </Link>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n</Row> */}\r\n       \r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default recordlist","import React from 'react'\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport Arrow from '../assets/Vector.svg'\r\n\r\n\r\n\r\nfunction GoBackBtn() {\r\n  let navigate = useNavigate()\r\n\r\n  const goBack = () => {navigate(-1)}\r\n\r\n  return (\r\n    <button className='goback position-relative gobacklist' > \r\n        <img src={Arrow} alt=\"arrow\" onClick={goBack}/> \r\n      </button>\r\n  )\r\n}\r\n\r\nexport default GoBackBtn","import React, {useEffect, useState, useContext} from 'react'\r\nimport {useLocation} from 'react-router-dom'\r\nimport {Context} from '../Datacontext'\r\nimport {ContextTeamPosition} from '../Datacontext'\r\n\r\n\r\n\r\nimport Goback from '../components/GoBackBtn'\r\n\r\n//import Arrow from '../assets/Vector.svg'\r\n\r\nfunction recordDetail() {\r\n    let location = useLocation()\r\n    let token = \"3ebff5ab018b0675ff671820082b2cb7\"\r\n    let id = location.pathname.split(\"id=\")[1]\r\n\r\n    let [ laptopDetails, setlaptopDetails ] = useState([])\r\n    // const [team, setteam] = useState(\"\")\r\n    let [ position, setposition ] = useState([])\r\n    const teamsContext = useContext(Context);\r\n    const tp = useContext(ContextTeamPosition);\r\n  let myteam = ''\r\n  let myposition = ''\r\n \r\n    useEffect(() => {\r\n      fetch(`https://pcfy.redberryinternship.ge/api/laptop/${id}?token=${token}`)\r\n      .then(data => data.json())\r\n      .then(res => setlaptopDetails(res.data))\r\n\r\n\r\n\r\n\r\n      fetch('https://pcfy.redberryinternship.ge/api/positions')\r\n      .then(res => res.json())\r\n      .then(res => setposition(res.data))\r\n    }, [])\r\n    \r\n\r\n    \r\n    \r\n  return (\r\n    <>\r\n\r\n      <Goback />\r\n\r\n      <h1 className='detailspage-title'>ᲚᲔᲞᲢᲝᲞᲘᲡ ᲘᲜᲤᲝ</h1>\r\n\r\n        {\r\n            laptopDetails.length !== 0 ? \r\n            <div className=\"infocontainer\">\r\n\r\n              <div className='info info-row info-1'>\r\n                 <img src={\"https://pcfy.redberryinternship.ge/\" + laptopDetails.laptop.image}  alt=\"laptop_img\" className='laptopimg'/>\r\n\r\n\r\n                <div >\r\n\r\n                  <div className='info d-flex'>\r\n                    <div>\r\n                    <div>სახელი:</div>\r\n                    <div>თიმი:</div>\r\n                    <div>პოზიცია:</div>\r\n                    <div>მეილი:</div>\r\n                    <div>ტელ. ნომერი:</div>\r\n                  </div>\r\n\r\n                  <div className=''>\r\n                    <div className='a'> \r\n                        {laptopDetails.user.name} {laptopDetails.user.surname} \r\n                    </div>\r\n                   \r\n                    <div> {\r\n                        \r\n                        teamsContext.filter((t,i) => {\r\n                          if( t.id === laptopDetails.user.team_id ) {\r\n                            myteam = t.name\r\n                          }\r\n                        })\r\n                      }  \r\n                            {myteam}\r\n                      </div>\r\n                    <div>\r\n                      {\r\n                        \r\n                        position.filter((p,i) => {\r\n                        \r\n                          if( p.id === laptopDetails.user.position_id ) {\r\n                            myposition = p.name\r\n                          }\r\n                        })\r\n                        \r\n                      } \r\n\r\n                      {myposition}\r\n                    </div>\r\n                    <div>{laptopDetails.user.email}</div>\r\n                    <div>{laptopDetails.user.phone_number}</div>\r\n                  </div>\r\n                  </div>\r\n              </div>\r\n               \r\n\r\n\r\n\r\n\r\n\r\n                 \r\n                  \r\n                </div>\r\n\r\n\r\n                <div className='info info-row info-2'>\r\n\r\n                  <div>\r\n                      <div>\r\n                        <div> ლეპტოპის სახელი:</div>\r\n                        <div>ლეპტოპის ბრენდი:</div>\r\n                        <div>RAM:</div>\r\n                        <div>მეხსიერების ტიპი:</div>\r\n                      </div>\r\n\r\n                      <div className=''>\r\n                        <div> \r\n                            {laptopDetails.laptop.name}\r\n                        </div>\r\n                        <div> \r\n                            {laptopDetails.laptop.brand_id}\r\n                        </div>\r\n                      \r\n                      \r\n                        <div>{laptopDetails.laptop.ram}</div>\r\n                        <div>{laptopDetails.laptop.hard_drive_type}</div>\r\n                      </div>\r\n                  </div>\r\n\r\n\r\n\r\n                  <div>\r\n                      <div>\r\n                        <div> CPU:</div>\r\n                        <div>CPU-ს ბირთვი:</div>\r\n                        <div>CPU-ს ნაკადი:</div>\r\n                      </div>\r\n\r\n                      <div className=''>\r\n                        <div> \r\n                            {laptopDetails.laptop.cpu.name}\r\n                        </div>\r\n                        <div> \r\n                            {laptopDetails.laptop.cpu.cores}\r\n                        </div>\r\n                      \r\n                      \r\n                        <div> {laptopDetails.laptop.cpu.threads}</div>\r\n                       \r\n                      </div>\r\n                  </div>\r\n\r\n                </div>\r\n                <div className='info info-row info-3'>\r\n                  <div>\r\n                  <div>\r\n                        <div> ლეპტოპის მდგომარეობა:</div>\r\n                        <div>ლეპტოპის ფასი:</div>\r\n                       \r\n                      </div>\r\n\r\n                      <div className=''>\r\n                        <div> \r\n                            {laptopDetails.laptop.state}\r\n                        </div>\r\n                        <div> \r\n                            {laptopDetails.laptop.price}\r\n                        </div>\r\n                      \r\n                      </div>\r\n                  </div>\r\n\r\n\r\n\r\n                  <div>\r\n                    <div>შევსების რიცხვი:</div>\r\n                    <div>{laptopDetails.laptop.purchase_date}</div>\r\n                  </div>\r\n                 \r\n                </div>\r\n\r\n\r\n\r\n\r\n               \r\n            </div>\r\n            \r\n            : \"იტვირთება\"\r\n           \r\n        }\r\n\r\n{\r\n console.log(laptopDetails.laptop)\r\n\r\n \r\n}\r\n         \r\n    </>\r\n  )\r\n}\r\n\r\nexport default recordDetail","import React, { Component }  from 'react';\nimport './App.css';\nimport './App.min.css';\nimport { Routes, Route } from \"react-router-dom\";\nimport { useLocation } from 'react-router-dom';\nimport {ContextProvider} from './Datacontext'\n\nimport LandingPage from '../src/pages/landing'\nimport Fillform from '../src/pages/fillform'\nimport Recordlist from '../src/pages/recordlist'\nimport RecordDetails from  '../src/pages/recordDetail'\nfunction App() {\n\n  return (\n    <ContextProvider>\n      {\n      <div className=\"App\">\n        <Routes>\n            <Route path=\"/PCfy/\" element={<LandingPage />}/>\n            <Route path=\"/PCfy/fillform\" element={<Fillform />}/>\n            <Route path=\"/PCfy/recordlist\" element={<Recordlist />}/>\n            <Route path=\"/PCfy/recordlist/*\" element={<RecordDetails />}/>\n        </Routes>\n      </div>\n      }\n    </ContextProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n  </React.StrictMode>\n);\n\n\n"],"sourceRoot":""}